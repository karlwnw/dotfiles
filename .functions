#!/bin/bash

# Create a new directory and enter it
function md() {
    mkdir -p "$@" && cd "$@"
}

# Print the wifi password (current connected wifi is no SSID provided)
# Requires the alias "wifiname"
function wifipassword() {
  if [ $# -eq 0 ]
    then
      ssid="$(wifiname)"
    else
      ssid=$1
  fi
  security find-generic-password -ga $ssid | grep "password:"
}

# Get or set mouse tracking speed
function mousespeed() {
  if [ $# -eq 0 ]
    then
      defaults read -g com.apple.mouse.scaling
    else
      defaults write -g com.apple.mouse.scaling $1
  fi
}

# Extract archives - use: extract <file>
# Credits to http://dotfiles.org/~pseup/.bashrc
function extract() {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2) tar xjf $1 ;;
            *.tar.gz) tar xzf $1 ;;
            *.bz2) bunzip2 $1 ;;
            *.rar) rar x $1 ;;
            *.gz) gunzip $1 ;;
            *.tar) tar xf $1 ;;
            *.tbz2) tar xjf $1 ;;
            *.tgz) tar xzf $1 ;;
            *.zip) unzip $1 ;;
            *.Z) uncompress $1 ;;
            *.7z) 7z x $1 ;;
            *) echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

locationbyip() {
  curl -s https://ipinfo.io/loc
}

# who is using the laptop's iSight camera?
camerausedby () {
  echo "Checking to see who is using the iSight cameraâ€¦ ðŸ“·"
  usedby=$(lsof | grep -w "AppleCamera\|USBVDC\|iSight" | awk '{printf $2"\n"}' | xargs ps)
  echo -e "Recent camera uses:\n$usedby"
}

flushdns() {
  sudo killall -HUP mDNSResponder;sudo killall mDNSResponderHelper;sudo dscacheutil -flushcache
}

serverpython() {
  python -m SimpleHTTPServer $1
}
